//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MessengerClient.MessengerService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessengerService.IMessenger")]
    public interface IMessenger {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessenger/RegisterUser", ReplyAction="http://tempuri.org/IMessenger/RegisterUserResponse")]
        bool RegisterUser(string name, string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessenger/RegisterUser", ReplyAction="http://tempuri.org/IMessenger/RegisterUserResponse")]
        System.Threading.Tasks.Task<bool> RegisterUserAsync(string name, string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessenger/FriendUser", ReplyAction="http://tempuri.org/IMessenger/FriendUserResponse")]
        bool FriendUser(int idFirst, int idSecond);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessenger/FriendUser", ReplyAction="http://tempuri.org/IMessenger/FriendUserResponse")]
        System.Threading.Tasks.Task<bool> FriendUserAsync(int idFirst, int idSecond);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessenger/PingToServer", ReplyAction="http://tempuri.org/IMessenger/PingToServerResponse")]
        System.TimeSpan PingToServer(System.DateTime dateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessenger/PingToServer", ReplyAction="http://tempuri.org/IMessenger/PingToServerResponse")]
        System.Threading.Tasks.Task<System.TimeSpan> PingToServerAsync(System.DateTime dateTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessenger/IsUniqueUsername", ReplyAction="http://tempuri.org/IMessenger/IsUniqueUsernameResponse")]
        bool IsUniqueUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessenger/IsUniqueUsername", ReplyAction="http://tempuri.org/IMessenger/IsUniqueUsernameResponse")]
        System.Threading.Tasks.Task<bool> IsUniqueUsernameAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessengerChannel : IMessenger, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessengerClient : System.ServiceModel.ClientBase<IMessenger>, IMessenger {
        
        public MessengerClient() {
        }
        
        public MessengerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MessengerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessengerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MessengerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RegisterUser(string name, string username, string password, string email) {
            return base.Channel.RegisterUser(name, username, password, email);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterUserAsync(string name, string username, string password, string email) {
            return base.Channel.RegisterUserAsync(name, username, password, email);
        }
        
        public bool FriendUser(int idFirst, int idSecond) {
            return base.Channel.FriendUser(idFirst, idSecond);
        }
        
        public System.Threading.Tasks.Task<bool> FriendUserAsync(int idFirst, int idSecond) {
            return base.Channel.FriendUserAsync(idFirst, idSecond);
        }
        
        public System.TimeSpan PingToServer(System.DateTime dateTime) {
            return base.Channel.PingToServer(dateTime);
        }
        
        public System.Threading.Tasks.Task<System.TimeSpan> PingToServerAsync(System.DateTime dateTime) {
            return base.Channel.PingToServerAsync(dateTime);
        }
        
        public bool IsUniqueUsername(string username) {
            return base.Channel.IsUniqueUsername(username);
        }
        
        public System.Threading.Tasks.Task<bool> IsUniqueUsernameAsync(string username) {
            return base.Channel.IsUniqueUsernameAsync(username);
        }
    }
}
